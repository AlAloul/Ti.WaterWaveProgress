/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.waterwaveprogress;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.util.Log;
import org.appcelerator.titanium.util.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;
import org.appcelerator.titanium.TiApplication;

import android.graphics.Color;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.app.Activity;
import cn.modificator.waterwave_progress.*;

// This proxy can be created by calling Waterwaveprogress.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = WaterwaveprogressModule.class)
public class ViewProxy extends TiViewProxy {
	// Standard Debugging variables
	private static final String LCAT = "WaWaView";

	WaterWaveProgress view;

	private class WWPView extends TiUIView {
		public WWPView(TiViewProxy proxy) {
			super(proxy);
			LayoutParams lp = new LayoutParams(LayoutParams.WRAP_CONTENT,
					LayoutParams.WRAP_CONTENT);
			LinearLayout container = new LinearLayout(proxy.getActivity());
			container.setLayoutParams(lp);
			view = new WaterWaveProgress(TiApplication.getInstance()
					.getApplicationContext());

			container.addView(view);
			setNativeView(container);
		}

		@Override
		public void processProperties(KrollDict d) {
			super.processProperties(d);
		}
	}

	// Constructor
	public ViewProxy() {
		super();
	}

	@Override
	public TiUIView createView(Activity activity) {
		TiUIView view = new WWPView(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options) {
		super.handleCreationDict(options);
		if (options.containsKeyAndNotNull("progress")) {
			view.setProgress(TiConvert.toInt(options, "progress"));
		}
		if (options.containsKeyAndNotNull("maxProgress")) {
			view.setMaxProgress(TiConvert.toInt(options, "maxProgress"));
		}
		if (options.containsKeyAndNotNull("ringWidth")) {
			view.setRingWidth(TiConvert.toFloat(options, "ringWidth"));
		}
		if (options.containsKeyAndNotNull("fontSize")) {
			view.setFontSize(TiConvert.toInt(options, "fontSize"));
		}
		if (options.containsKeyAndNotNull("ring2WaterWidth")) {
			view.setRing2WaterWidth(TiConvert.toFloat(options,
					"ring2WaterWidth"));
		}
		if (options.containsKeyAndNotNull("ringColor")) {
			view.setRingColor(TiConvert.toColor(options, "ringColor"));
		}
		if (options.containsKeyAndNotNull("ringBgColor")) {
			view.setRingBgColor(TiConvert.toColor(options, "ringBgColor"));
		}
		if (options.containsKeyAndNotNull("waterColor")) {
			view.setWaterColor(TiConvert.toColor(options, "waterColor"));
		}
		if (options.containsKeyAndNotNull("waterBgColor")) {
			view.setWaterBgColor(TiConvert.toColor(options, "waterBgColor"));
		}
		if (options.containsKeyAndNotNull("textColor")) {
			view.setTextColor(TiConvert.toColor(options, "textColor"));
		}
		if (options.containsKeyAndNotNull("showNumerical")) {
			view.setShowNumerical(TiConvert.toBoolean(options, "showNumerical"));
		}
		if (options.containsKeyAndNotNull("showRing")) {
			view.setShowRing(TiConvert.toBoolean(options, "showRing"));
		}
		if (options.containsKeyAndNotNull("crestCount")) {
			view.setCrestCount(TiConvert.toFloat(options, "crestCount"));
		}
	}

	@Kroll.method
	public void setProgress(int progress) {
		view.setProgress(progress);
	}

	@Kroll.method
	public void setRingWidth(float width) {
		view.setRingWidth(width);
	}

	@Kroll.method
	public void setCrestCount(float crestCount) {
		view.setCrestCount(crestCount);
	}

	@Kroll.method
	public void setAmplitude(float amp) {
		view.setAmplitude(amp);
	}

}